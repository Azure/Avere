# Copyright (C) Microsoft Corporation. All rights reserved.
# https://aka.ms/yaml

steps:
- script: |
   export PATH=$PATH:${BUILD_SOURCESDIRECTORY}/test/utils
   TMUX_SESSION=upload_gsi
   echo "##vso[task.setvariable variable=TMUX_SESSION]${TMUX_SESSION}"

   cmdokmsg="CMD_OK_$(date -u '+%m%dx%H%M%S')"
   cmdlog=/tmp/vm_runcmd.log
   az vm run-command invoke                  \
   --resource-group ${RESOURCE_GROUP_NAME} \
   --name ${VM_NAME}                      \
   --command-id RunShellScript             \
   --scripts "tmux new-session -d -s ${TMUX_SESSION} /opt/upload_gsi.sh && echo ${cmdokmsg}" \
   --query 'value[0].message' --output tsv |& tee ${cmdlog}
   check_rc.sh ${PIPESTATUS[0]} " ${TMUX_SESSION} command" || exit 0
   grep -q ${cmdokmsg} ${cmdlog}
   check_rc.sh $? "Check for CMD_OK (${cmdokmsg}) in cmdlog (${cmdlog}) for  ${TMUX_SESSION}" || exit 0

   cmdokmsg2="CMD_OK_$(date -u '+%m%dx%H%M%S')"
   cmdlog2=/tmp/vm_runcmd2.log
   polling_secs=60
   while [ 1 ]; do
   az vm run-command invoke                    \
      --resource-group ${RESOURCE_GROUP_NAME}   \
      --name ${VM_NAME}                         \
      --command-id RunShellScript               \
      --scripts "tmux has-session -t ${TMUX_SESSION} || echo ${cmdokmsg2}" \
      --query 'value[0].message' --output tsv |& tee ${cmdlog2}
   check_rc.sh ${PIPESTATUS[0]} "Checking for tmux session ${TMUX_SESSION}" || exit
   grep -q ${cmdokmsg2} ${cmdlog2}
   if [ $? -ne 0 ]; then
      echo "INFO: tmux session ${TMUX_SESSION} still active. Re-check in ${polling_secs} seconds."
      sleep ${polling_secs}
      continue
   else
      echo "INFO: tmux session ${TMUX_SESSION} no longer active"
      break
   fi
   done

   cmdokmsg3="CMD_OK_$(date -u '+%m%dx%H%M%S')"
   cmdlog3=/tmp/vm_runcmd2.log
   az vm run-command invoke                      \
      --resource-group ${RESOURCE_GROUP_NAME}   \
      --name ${VM_NAME}                         \
      --command-id RunShellScript               \
      --scripts "cat /tmp/gsi_results.done || echo ${cmdokmsg3}" \
      --query 'value[0].message' --output tsv |& tee ${cmdlog3}
   check_rc.sh ${PIPESTATUS[0]} "Checking for file /tmp/gsi_results.done" || exit
   grep -q ${cmdokmsg3} ${cmdlog3}
   check_rc.sh $? "Check for CMD_OK (${cmdokmsg3}) in cmdlog (${cmdlog3}) for ls /tmp/gsi_results.done" || exit 0
   grep -q 'gsi_complete' ${cmdlog3}
   check_rc.sh $? "Check for (gsi_complete) in cmdlog (${cmdlog3})" || exit 0
  displayName: "Run GSI script for gsi and check for complete"
  timeoutInMinutes: 45
  condition: always()
  env:
    ARM_CLIENT_ID: $(AZURE-CLIENT-ID)
    ARM_CLIENT_SECRET: $(AZURE-CLIENT-SECRET)
    ARM_TENANT_ID: $(AZURE-TENANT-ID)
    ARM_SUBSCRIPTION_ID: $(AZURE-SUBSCRIPTION-ID)